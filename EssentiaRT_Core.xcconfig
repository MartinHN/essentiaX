//
//  EssentiaRT.xcconfig
//  essentiaX
//
//  Created by martin hermant on 10/09/15.
//  Copyright (c) 2015 martin hermant. All rights reserved.
//


// ESSENTIA_PATH NEEDS TO BE DEFINED


GCC_PREPROCESSOR_DEFINITIONS = HAVE_AVRESAMPLE=1

// Actually have to manually change fft algorithms to essentia/algorithm/standard/ fftk /ffta / fftw target for xcode to compile it
// but everything else should be cared of
// ACCELERATE / KISS / FFTW

ESSENTIA_FFT = ACCELERATE



H_YAML = /usr/local/include/

H_TAGLIB=/usr/local/include/taglib/



H_ESSENTIA_SRC=$(ESSENTIA_PATH)src/

H_KISS_FFT=$(H_ESSENTIA_SRC)3rdparty/kiss_fft130/
H_FFTW_FFT=/usr/local/include/

H_ESSENTIA_INTERN = $(H_ESSENTIA_SRC)essentia $(H_ESSENTIA_SRC)essentia/utils (H_ESSENTIA_SRC)essentia/streaming   $(H_ESSENTIA_SRC)



ESSENTIA_HEADERS= $(H_ESSENTIA_INTERN) $(H_TAGLIB) $(H_$(ESSENTIA_FFT)_FFT) $(H_YAML)




// LIBRARIES

L_Z = "/usr/local/opt/zlib/lib/libz.a"

L_SAMPLERATE ="/usr/local/lib/libsamplerate.a"

L_YAML = "/usr/local/lib/libyaml.a"
L_TAG = "/usr/local/lib/libtag.a"


L_ESSENTIA_FFT_FFTW_S = "/usr/local/lib/libfftw3f.a"
L_ESSENTIA_FFT_S = $(L_ESSENTIA_FFT_$(ESSENTIA_FFT)_S)


L_ESSENTIA_FFT_FFTW_D = -lfftw3f
L_ESSENTIA_FFT_D = $(L_ESSENTIA_FFT_$(ESSENTIA_FFT)_D)

ESSENTIA_STATICLIBS = $(L_Z) $(L_YAML) $(L_TAG) $(L_ESSENTIA_FFT_S)
ESSENTIA_DYNAMICLIBS = -L/usr/local/lib -lyaml -ltag



ESSENTIA_LIBS = $(ESSENTIA_DYNAMICLIBS)

ESSENTIA_FFT_ACCELERATE_FRAMEWORK = -framework Accelerate

ESSENTIA_FRAMEWORKS = -framework Security $(ESSENTIA_FFT_$(ESSENTIA_FFT)_FRAMEWORK)

